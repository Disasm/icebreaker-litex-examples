<?xml version="1.0" encoding="utf-8"?>

<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD.xsd" >
    <vendor>litex</vendor>
    <name>USB</name>

    <addressUnitBits>8</addressUnitBits>
    <width>32</width>
    <size>32</size>
    <access>read-write</access>
    <resetValue>0x00000000</resetValue>
    <resetMask>0xFFFFFFFF</resetMask>

    <peripherals>
        <peripheral>
            <name>CTRL</name>
            <baseAddress>0xE0000000</baseAddress>
            <groupName>CTRL</groupName>
            <registers>
                <register>
                    <name>RESET</name>
                    <description><![CDATA[Write a ``1`` to this register to reset the SoC.]]></description>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>reset</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SCRATCH</name>
                    <description><![CDATA[Use this register as a scratch space to verify that software read/write accesses
to the Wishbone/CSR bus are working correctly. The initial reset value of
0x1234578 can be used to verify endianness.]]></description>
                    <addressOffset>0x0004</addressOffset>
                    <resetValue>0x12345678</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>scratch</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>BUS_ERRORS</name>
                    <description><![CDATA[Total number of Wishbone bus errors (timeouts) since last reset.]]></description>
                    <addressOffset>0x0008</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>bus_errors</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0xc</size>
                <usage>registers</usage>
            </addressBlock>
        </peripheral>
        <peripheral>
            <name>UART_PHY</name>
            <baseAddress>0xE0001000</baseAddress>
            <groupName>UART_PHY</groupName>
            <registers>
                <register>
                    <name>TUNING_WORD</name>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x2752546</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>tuning_word</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0x4</size>
                <usage>registers</usage>
            </addressBlock>
        </peripheral>
        <peripheral>
            <name>UART</name>
            <baseAddress>0xE0001800</baseAddress>
            <groupName>UART</groupName>
            <registers>
                <register>
                    <name>RXTX</name>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>rxtx</name>
                            <msb>7</msb>
                            <bitRange>[7:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>TXFULL</name>
                    <addressOffset>0x0004</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>txfull</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RXEMPTY</name>
                    <addressOffset>0x0008</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>rxempty</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_STATUS</name>
                    <addressOffset>0x000c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>status</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_PENDING</name>
                    <addressOffset>0x0010</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>pending</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_ENABLE</name>
                    <addressOffset>0x0014</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>enable</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0x18</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>uart</name>
                <value>0</value>
            </interrupt>
        </peripheral>
        <peripheral>
            <name>TIMER0</name>
            <baseAddress>0xE0002000</baseAddress>
            <groupName>TIMER0</groupName>
            <registers>
                <register>
                    <name>LOAD</name>
                    <description><![CDATA[Load value when Timer is (re-)enabled. In One-Shot mode, the value written to
this register specifies the Timer's duration in clock cycles.]]></description>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>load</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>RELOAD</name>
                    <description><![CDATA[Reload value when Timer reaches ``0``. In Periodic mode, the value written to
this register specify the Timer's period in clock cycles.]]></description>
                    <addressOffset>0x0004</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>reload</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EN</name>
                    <description><![CDATA[Enable flag of the Timer. Set this flag to ``1`` to enable/start the Timer.  Set
to ``0`` to disable the Timer.]]></description>
                    <addressOffset>0x0008</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>en</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>UPDATE_VALUE</name>
                    <description><![CDATA[Update trigger for the current countdown value. A write to this register latches
the current countdown value to ``value`` register.]]></description>
                    <addressOffset>0x000c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>update_value</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>VALUE</name>
                    <description><![CDATA[Latched countdown value. This value is updated by writing to ``update_value``.]]></description>
                    <addressOffset>0x0010</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>value</name>
                            <msb>31</msb>
                            <bitRange>[31:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_STATUS</name>
                    <addressOffset>0x0014</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>status</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_PENDING</name>
                    <addressOffset>0x0018</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>pending</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>EV_ENABLE</name>
                    <addressOffset>0x001c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>enable</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0x20</size>
                <usage>registers</usage>
            </addressBlock>
            <interrupt>
                <name>timer0</name>
                <value>1</value>
            </interrupt>
        </peripheral>
        <peripheral>
            <name>LXSPI</name>
            <baseAddress>0xE0002800</baseAddress>
            <groupName>LXSPI</groupName>
            <registers>
                <register>
                    <name>BITBANG</name>
                    <description><![CDATA[Bitbang controls for SPI output.  Only standard 1x SPI is supported, and as a
result all four wires are ganged together.  This means that it is only possible
to perform half-duplex operations, using this SPI core.]]></description>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>mosi</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[Output value for MOSI pin, valid whenever ``dir`` is ``0``.]]></description>
                        </field>
                        <field>
                            <name>clk</name>
                            <msb>1</msb>
                            <bitRange>[1:1]</bitRange>
                            <lsb>1</lsb>
                            <description><![CDATA[Output value for SPI CLK pin.]]></description>
                        </field>
                        <field>
                            <name>cs_n</name>
                            <msb>2</msb>
                            <bitRange>[2:2]</bitRange>
                            <lsb>2</lsb>
                            <description><![CDATA[Output value for SPI CSn pin.]]></description>
                        </field>
                        <field>
                            <name>dir</name>
                            <msb>3</msb>
                            <bitRange>[3:3]</bitRange>
                            <lsb>3</lsb>
                            <description><![CDATA[Sets the direction for *ALL* SPI data pins except CLK and CSn.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>MISO</name>
                    <description><![CDATA[Incoming value of MISO signal.]]></description>
                    <addressOffset>0x0004</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>miso</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>BITBANG_EN</name>
                    <description><![CDATA[Write a ``1`` here to disable memory-mapped mode and enable bitbang mode.]]></description>
                    <addressOffset>0x0008</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>bitbang_en</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0xc</size>
                <usage>registers</usage>
            </addressBlock>
        </peripheral>
        <peripheral>
            <name>LEDS</name>
            <baseAddress>0xE0003000</baseAddress>
            <groupName>LEDS</groupName>
            <registers>
                <register>
                    <name>OUT</name>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>ledr</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The Red LED on the main iCEBreaker board.]]></description>
                        </field>
                        <field>
                            <name>ledg</name>
                            <msb>1</msb>
                            <bitRange>[1:1]</bitRange>
                            <lsb>1</lsb>
                            <description><![CDATA[The Green LED on the main iCEBreaker board.]]></description>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0x4</size>
                <usage>registers</usage>
            </addressBlock>
        </peripheral>
        <peripheral>
            <name>USB</name>
            <baseAddress>0xE0003800</baseAddress>
            <groupName>USB</groupName>
            <registers>
                <register>
                    <name>PULLUP_OUT</name>
                    <description><![CDATA[GPIO Output(s) Control.]]></description>
                    <addressOffset>0x0000</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>pullup_out</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>ADDRESS</name>
                    <description><![CDATA[Sets the USB device address, in order to ignore packets going to other devices
on the bus. This value is reset when the host issues a USB Device Reset
condition.]]></description>
                    <addressOffset>0x0004</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>addr</name>
                            <msb>6</msb>
                            <bitRange>[6:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[Write the USB address from USB ``SET_ADDRESS`` packets.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>NEXT_EV</name>
                    <description><![CDATA[In ``eptri``, there are three endpoints.  It is possible for an IRQ to fire and
have all three bits set.  Under these circumstances it can be difficult to know
which event to process first.  Use this register to determine which event needs
to be processed first. Only one bit will ever be set at a time.]]></description>
                    <addressOffset>0x0008</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>in</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[``1`` if the next event is an ``IN`` event]]></description>
                        </field>
                        <field>
                            <name>out</name>
                            <msb>1</msb>
                            <bitRange>[1:1]</bitRange>
                            <lsb>1</lsb>
                            <description><![CDATA[``1`` if the next event is an ``OUT`` event]]></description>
                        </field>
                        <field>
                            <name>setup</name>
                            <msb>2</msb>
                            <bitRange>[2:2]</bitRange>
                            <lsb>2</lsb>
                            <description><![CDATA[``1`` if the next event is an ``SETUP`` event]]></description>
                        </field>
                        <field>
                            <name>reset</name>
                            <msb>3</msb>
                            <bitRange>[3:3]</bitRange>
                            <lsb>3</lsb>
                            <description><![CDATA[``1`` if the next event is a ``RESET`` event]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_DATA</name>
                    <description><![CDATA[Data from the last ``SETUP`` transactions.  It will be 10 bytes long, because it
will include the CRC16.  This is a FIFO, and the queue is advanced
automatically.]]></description>
                    <addressOffset>0x000c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>data</name>
                            <msb>7</msb>
                            <bitRange>[7:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The next byte of ``SETUP`` data]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_CTRL</name>
                    <description><![CDATA[Controls for managing how to handle ``SETUP`` transactions.]]></description>
                    <addressOffset>0x0010</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>reset</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[Write a ``1`` here to reset the `SETUP` handler.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_STATUS</name>
                    <description><![CDATA[Status about the most recent ``SETUP`` transactions, and the state of the FIFO.]]></description>
                    <addressOffset>0x0014</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>epno</name>
                            <msb>3</msb>
                            <bitRange>[3:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The destination endpoint for the most recent SETUP token.]]></description>
                        </field>
                        <field>
                            <name>have</name>
                            <msb>4</msb>
                            <bitRange>[4:4]</bitRange>
                            <lsb>4</lsb>
                            <description><![CDATA[``1`` if there is data in the FIFO.]]></description>
                        </field>
                        <field>
                            <name>pend</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[``1`` if there is an IRQ pending.]]></description>
                        </field>
                        <field>
                            <name>is_in</name>
                            <msb>6</msb>
                            <bitRange>[6:6]</bitRange>
                            <lsb>6</lsb>
                            <description><![CDATA[``1`` if an IN stage was detected.]]></description>
                        </field>
                        <field>
                            <name>data</name>
                            <msb>7</msb>
                            <bitRange>[7:7]</bitRange>
                            <lsb>7</lsb>
                            <description><![CDATA[``1`` if a DATA stage is expected.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_EV_STATUS</name>
                    <addressOffset>0x0018</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>setup_ev_status</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_EV_PENDING</name>
                    <addressOffset>0x001c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>setup_ev_pending</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>SETUP_EV_ENABLE</name>
                    <addressOffset>0x0020</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>setup_ev_enable</name>
                            <msb>1</msb>
                            <bitRange>[1:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_DATA</name>
                    <description><![CDATA[Each byte written into this register gets added to an outgoing FIFO. Any bytes
that are written here will be transmitted in the order in which they were added.
The FIFO queue is automatically advanced with each write. The FIFO queue is 64
bytes deep.  If you exceed this amount, the result is undefined.]]></description>
                    <addressOffset>0x0024</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>data</name>
                            <msb>7</msb>
                            <bitRange>[7:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The next byte to add to the queue.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_CTRL</name>
                    <description><![CDATA[Enables transmission of data in response to ``IN`` tokens, or resets the
contents of the FIFO.]]></description>
                    <addressOffset>0x0028</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>epno</name>
                            <msb>3</msb>
                            <bitRange>[3:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The endpoint number for the transaction that is queued in the FIFO.]]></description>
                        </field>
                        <field>
                            <name>reset</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[Write a ``1`` here to clear the contents of the FIFO.]]></description>
                        </field>
                        <field>
                            <name>stall</name>
                            <msb>6</msb>
                            <bitRange>[6:6]</bitRange>
                            <lsb>6</lsb>
                            <description><![CDATA[Write a ``1`` here to stall the EP written in ``EP``.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_STATUS</name>
                    <description><![CDATA[Status about the IN handler.  As soon as you write to `IN_DATA`,
``IN_STATUS.HAVE`` should go to ``1``.]]></description>
                    <addressOffset>0x002c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>idle</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[This value is ``1`` if the packet has finished transmitting.]]></description>
                        </field>
                        <field>
                            <name>have</name>
                            <msb>4</msb>
                            <bitRange>[4:4]</bitRange>
                            <lsb>4</lsb>
                            <description><![CDATA[This value is ``0`` if the FIFO is empty.]]></description>
                        </field>
                        <field>
                            <name>pend</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[``1`` if there is an IRQ pending.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_EV_STATUS</name>
                    <addressOffset>0x0030</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>in_ev_status</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_EV_PENDING</name>
                    <addressOffset>0x0034</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>in_ev_pending</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_EV_ENABLE</name>
                    <addressOffset>0x0038</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>in_ev_enable</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>IN_STALL_STATUS</name>
                    <addressOffset>0x003c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>in_stall_status</name>
                            <msb>15</msb>
                            <bitRange>[15:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_DATA</name>
                    <description><![CDATA[Data received from the host will go into a FIFO.  This register reflects the
contents of the top byte in that FIFO.  Reading from this register advances the
FIFO pointer.]]></description>
                    <addressOffset>0x0040</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>data</name>
                            <msb>7</msb>
                            <bitRange>[7:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The top byte of the receive FIFO.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_CTRL</name>
                    <description><![CDATA[Controls for receiving packet data.  To enable an endpoint, write its value to
``epno``, with the ``enable`` bit set to ``1`` to enable an endpoint, or ``0``
to disable it. Resetting the OutHandler will set all ``enable`` bits to 0.

Similarly, you can adjust the ``STALL`` state by setting or clearing the
``stall`` bit.]]></description>
                    <addressOffset>0x0044</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>epno</name>
                            <msb>3</msb>
                            <bitRange>[3:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The endpoint number to update the ``enable`` and ``status`` bits for.]]></description>
                        </field>
                        <field>
                            <name>enable</name>
                            <msb>4</msb>
                            <bitRange>[4:4]</bitRange>
                            <lsb>4</lsb>
                            <description><![CDATA[Write a ``1`` here to enable receiving data]]></description>
                        </field>
                        <field>
                            <name>reset</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[Write a ``1`` here to reset the ``OUT`` handler]]></description>
                        </field>
                        <field>
                            <name>stall</name>
                            <msb>6</msb>
                            <bitRange>[6:6]</bitRange>
                            <lsb>6</lsb>
                            <description><![CDATA[Write a ``1`` here to stall an endpoint]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_STATUS</name>
                    <description><![CDATA[Status about the current state of the `OUT` endpoint.]]></description>
                    <addressOffset>0x0048</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>epno</name>
                            <msb>3</msb>
                            <bitRange>[3:0]</bitRange>
                            <lsb>0</lsb>
                            <description><![CDATA[The destination endpoint for the most recent ``OUT`` packet.]]></description>
                        </field>
                        <field>
                            <name>have</name>
                            <msb>4</msb>
                            <bitRange>[4:4]</bitRange>
                            <lsb>4</lsb>
                            <description><![CDATA[``1`` if there is data in the FIFO.]]></description>
                        </field>
                        <field>
                            <name>pend</name>
                            <msb>5</msb>
                            <bitRange>[5:5]</bitRange>
                            <lsb>5</lsb>
                            <description><![CDATA[``1`` if there is an IRQ pending.]]></description>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_EV_STATUS</name>
                    <addressOffset>0x004c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>out_ev_status</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_EV_PENDING</name>
                    <addressOffset>0x0050</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>out_ev_pending</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_EV_ENABLE</name>
                    <addressOffset>0x0054</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-write</access>
                    <fields>
                        <field>
                            <name>out_ev_enable</name>
                            <msb>0</msb>
                            <bitRange>[0:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_ENABLE_STATUS</name>
                    <addressOffset>0x0058</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>out_enable_status</name>
                            <msb>15</msb>
                            <bitRange>[15:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
                <register>
                    <name>OUT_STALL_STATUS</name>
                    <addressOffset>0x005c</addressOffset>
                    <resetValue>0x00</resetValue>
                    <size>32</size>
                    <access>read-only</access>
                    <fields>
                        <field>
                            <name>out_stall_status</name>
                            <msb>15</msb>
                            <bitRange>[15:0]</bitRange>
                            <lsb>0</lsb>
                        </field>
                    </fields>
                </register>
            </registers>
            <addressBlock>
                <offset>0</offset>
                <size>0x60</size>
                <usage>registers</usage>
            </addressBlock>
        </peripheral>
    </peripherals>
</device>